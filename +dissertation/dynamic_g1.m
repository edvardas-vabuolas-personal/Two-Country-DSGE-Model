function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(62, 111);
g1(1,26)=(-T(6));
g1(1,27)=1;
g1(1,89)=(-(params(2)*params(32)));
g1(1,92)=(-(params(2)*(1-params(32))));
g1(2,26)=1;
g1(2,88)=(-params(33));
g1(2,89)=T(13)*(-params(32));
g1(2,29)=(-T(13));
g1(2,91)=(-(1-params(33)));
g1(2,92)=T(13)*(-(1-params(32)));
g1(2,76)=T(13);
g1(3,28)=1;
g1(3,45)=(-T(4));
g1(3,46)=(-T(3));
g1(3,47)=(-T(5));
g1(4,29)=1;
g1(4,45)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4));
g1(4,90)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4))));
g1(4,46)=(-((1-params(9))*T(3)*(-T(2))));
g1(4,47)=(-((1-params(12))*((1-params(7))*T(1)-T(2)*T(5))));
g1(5,28)=(-T(2));
g1(5,30)=1;
g1(5,45)=T(2);
g1(5,47)=(1-params(7))*T(1);
g1(6,26)=(-T(2));
g1(6,32)=1;
g1(7,26)=1;
g1(7,28)=1;
g1(7,31)=(-1);
g1(8,30)=1;
g1(8,32)=1;
g1(8,33)=(-1);
g1(9,27)=(-1);
g1(9,2)=params(7);
g1(9,33)=(-params(7));
g1(9,34)=1;
g1(10,31)=1;
g1(10,35)=(-(1-params(4)));
g1(10,46)=(-1);
g1(11,89)=1;
g1(11,36)=1;
g1(11,76)=(-1);
g1(12,9)=(-params(9));
g1(12,46)=1;
g1(12,93)=(-1);
g1(13,10)=(-params(12));
g1(13,47)=1;
g1(13,94)=(-1);
g1(14,31)=(-1);
g1(14,40)=1;
g1(15,27)=(-1);
g1(15,5)=(-1);
g1(15,41)=1;
g1(16,34)=(-1);
g1(16,6)=(-1);
g1(16,42)=1;
g1(17,33)=1;
g1(17,41)=1;
g1(17,43)=(-1);
g1(17,101)=(-1);
g1(18,7)=1;
g1(18,43)=(-1);
g1(18,44)=1;
g1(19,89)=(-(1-params(34)));
g1(19,48)=(-T(12));
g1(19,49)=1;
g1(19,92)=(-(params(14)*params(34)));
g1(20,88)=(-(1-params(35)));
g1(20,89)=T(14)*(-(1-params(34)));
g1(20,48)=1;
g1(20,91)=(-params(35));
g1(20,92)=T(14)*(-params(34));
g1(20,51)=(-T(14));
g1(20,76)=T(14);
g1(21,45)=(-T(10));
g1(21,50)=1;
g1(21,67)=(-T(9));
g1(21,68)=(-T(11));
g1(22,45)=T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10));
g1(22,90)=(-(T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10))));
g1(22,51)=1;
g1(22,67)=(-((1-params(21))*T(9)*(-T(8))));
g1(22,68)=(-((1-params(23))*((1-params(19))*T(7)-T(8)*T(11))));
g1(23,45)=T(8);
g1(23,50)=(-T(8));
g1(23,52)=1;
g1(23,68)=(1-params(19))*T(1);
g1(24,48)=(-T(8));
g1(24,54)=1;
g1(25,48)=1;
g1(25,50)=1;
g1(25,53)=(-1);
g1(26,52)=1;
g1(26,54)=1;
g1(26,55)=(-1);
g1(27,49)=(-1);
g1(27,12)=params(19);
g1(27,55)=(-params(19));
g1(27,56)=1;
g1(28,53)=1;
g1(28,57)=(-(1-params(16)));
g1(28,67)=(-1);
g1(29,92)=1;
g1(29,58)=1;
g1(29,76)=(-1);
g1(30,18)=(-params(21));
g1(30,67)=1;
g1(30,95)=(-1);
g1(31,19)=(-params(23));
g1(31,68)=1;
g1(31,96)=(-1);
g1(32,53)=(-1);
g1(32,62)=1;
g1(33,49)=(-1);
g1(33,15)=(-1);
g1(33,63)=1;
g1(34,56)=(-1);
g1(34,16)=(-1);
g1(34,64)=1;
g1(35,55)=1;
g1(35,63)=1;
g1(35,65)=(-1);
g1(35,101)=(-1);
g1(36,17)=1;
g1(36,65)=(-1);
g1(36,66)=1;
g1(37,27)=(-((1-params(31))*params(29)*params(28)));
g1(37,40)=(-((1-params(31))*params(28)*params(30)));
g1(37,49)=(-((1-params(31))*params(29)*(1-params(28))));
g1(37,62)=(-((1-params(31))*(1-params(28))*params(30)));
g1(37,75)=(-1);
g1(37,23)=(-params(31));
g1(37,76)=1;
g1(38,22)=(-params(10));
g1(38,75)=1;
g1(38,97)=(-1);
g1(39,8)=(-1)-params(11);
g1(39,45)=1;
g1(39,100)=(-1);
g1(39,24)=params(11);
g1(40,35)=(-params(3));
g1(40,37)=1;
g1(40,39)=(-params(1));
g1(40,42)=(-1);
g1(40,73)=(-(1/(1-params(26))));
g1(41,57)=(-params(15));
g1(41,59)=1;
g1(41,61)=(-params(13));
g1(41,64)=(-1);
g1(41,74)=(-(1/(1-params(27))));
g1(42,33)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(42,38)=1;
g1(42,47)=params(7)/params(1);
g1(43,55)=(-(params(19)*((params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1))/params(13)-1)));
g1(43,60)=1;
g1(43,68)=params(19)/params(13);
g1(44,31)=(-1);
g1(44,33)=params(7);
g1(44,38)=1;
g1(44,39)=1;
g1(44,69)=1;
g1(45,53)=(-1);
g1(45,55)=params(19);
g1(45,60)=1;
g1(45,61)=1;
g1(45,71)=1;
g1(46,35)=(-1);
g1(46,37)=(-1);
g1(46,70)=1;
g1(46,73)=(-1);
g1(47,57)=(-1);
g1(47,59)=(-1);
g1(47,72)=1;
g1(47,74)=(-1);
g1(48,41)=(-1);
g1(48,69)=(-1);
g1(48,70)=1;
g1(49,63)=(-1);
g1(49,71)=(-1);
g1(49,72)=1;
g1(50,20)=(-params(24));
g1(50,69)=1;
g1(50,98)=(-1);
g1(51,21)=(-params(25));
g1(51,71)=1;
g1(51,99)=(-1);
g1(52,1)=1;
g1(52,31)=(-1);
g1(52,77)=1;
g1(52,102)=(-1);
g1(53,4)=1;
g1(53,39)=(-1);
g1(53,78)=1;
g1(53,103)=(-1);
g1(54,3)=1;
g1(54,37)=(-1);
g1(54,79)=1;
g1(54,104)=(-1);
g1(55,34)=(-1);
g1(55,80)=1;
g1(55,105)=(-1);
g1(56,11)=1;
g1(56,53)=(-1);
g1(56,81)=1;
g1(56,106)=(-1);
g1(57,14)=1;
g1(57,61)=(-1);
g1(57,82)=1;
g1(57,107)=(-1);
g1(58,13)=1;
g1(58,59)=(-1);
g1(58,83)=1;
g1(58,108)=(-1);
g1(59,56)=(-1);
g1(59,84)=1;
g1(59,109)=(-1);
g1(60,85)=1;
g1(60,110)=(-1);
g1(60,111)=(-1);
g1(60,25)=1;
g1(61,8)=(-1);
g1(61,86)=1;
g1(62,111)=(-1);
g1(62,87)=1;

end
