function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(76, 115);
g1(1,23)=(-T(7));
g1(1,24)=1;
g1(1,100)=(-params(2));
g1(2,23)=1;
g1(2,99)=(-1);
g1(2,100)=(-(1/T(2)));
g1(2,26)=(-(1/T(2)));
g1(2,78)=1/T(2);
g1(3,25)=1;
g1(3,42)=(-T(4));
g1(3,43)=(-T(3));
g1(3,44)=(-T(5));
g1(3,68)=(-(params(36)*params(36)*T(4)));
g1(3,74)=(-T(6));
g1(4,26)=1;
g1(4,42)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4));
g1(4,101)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4))));
g1(4,43)=(-((1-params(9))*T(3)*(-T(2))));
g1(4,44)=(-((1-params(12))*((1-params(7))*T(1)-T(2)*T(5))));
g1(4,68)=T(15);
g1(4,74)=T(2)*T(6);
g1(4,104)=(-(T(2)*T(6)));
g1(5,25)=(-T(2));
g1(5,27)=1;
g1(5,42)=T(2);
g1(5,44)=(1-params(7))*T(1);
g1(5,68)=params(36)*T(2);
g1(6,23)=(-T(2));
g1(6,29)=1;
g1(7,23)=1;
g1(7,25)=1;
g1(7,28)=(-1);
g1(8,27)=1;
g1(8,29)=1;
g1(8,30)=(-1);
g1(9,24)=(-1);
g1(9,1)=params(7);
g1(9,30)=(-params(7));
g1(9,31)=1;
g1(10,28)=1;
g1(10,32)=(-(1-params(4)));
g1(10,43)=(-1);
g1(11,100)=1;
g1(11,33)=1;
g1(11,78)=(-1);
g1(12,6)=(-params(9));
g1(12,43)=1;
g1(12,106)=(-1);
g1(13,7)=(-params(12));
g1(13,44)=1;
g1(13,107)=(-1);
g1(14,28)=(-1);
g1(14,37)=1;
g1(15,24)=(-1);
g1(15,2)=(-1);
g1(15,38)=1;
g1(16,31)=(-1);
g1(16,3)=(-1);
g1(16,39)=1;
g1(17,30)=1;
g1(17,38)=1;
g1(17,40)=(-1);
g1(17,115)=(-1);
g1(18,4)=1;
g1(18,40)=(-1);
g1(18,41)=1;
g1(19,34)=(-1);
g1(19,39)=1;
g1(19,45)=1;
g1(20,46)=(-T(14));
g1(20,47)=1;
g1(20,103)=(-params(14));
g1(21,46)=1;
g1(21,102)=(-1);
g1(21,103)=(-(1/T(9)));
g1(21,49)=(-(1/T(9)));
g1(21,79)=1/T(9);
g1(22,42)=(-T(11));
g1(22,48)=1;
g1(22,65)=(-T(10));
g1(22,66)=(-T(12));
g1(22,70)=(-(params(37)*T(11)));
g1(22,75)=(-T(13));
g1(23,42)=T(9)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(11));
g1(23,101)=(-(T(9)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(11))));
g1(23,49)=1;
g1(23,65)=(-((1-params(21))*T(10)*(-T(9))));
g1(23,66)=(-((1-params(23))*((1-params(19))*T(8)-T(9)*T(12))));
g1(23,70)=T(16);
g1(23,75)=T(9)*T(13);
g1(23,105)=(-(T(9)*T(13)));
g1(24,42)=T(9);
g1(24,48)=(-T(9));
g1(24,50)=1;
g1(24,66)=(1-params(19))*T(1);
g1(24,70)=params(37)*T(9);
g1(25,46)=(-T(9));
g1(25,52)=1;
g1(26,46)=1;
g1(26,48)=1;
g1(26,51)=(-1);
g1(27,50)=1;
g1(27,52)=1;
g1(27,53)=(-1);
g1(28,47)=(-1);
g1(28,8)=params(19);
g1(28,53)=(-params(19));
g1(28,54)=1;
g1(29,51)=1;
g1(29,55)=(-(1-params(16)));
g1(29,65)=(-1);
g1(30,103)=1;
g1(30,56)=1;
g1(30,79)=(-1);
g1(31,12)=(-params(21));
g1(31,65)=1;
g1(31,108)=(-1);
g1(32,13)=(-params(23));
g1(32,66)=1;
g1(32,109)=(-1);
g1(33,51)=(-1);
g1(33,60)=1;
g1(34,47)=(-1);
g1(34,9)=(-1);
g1(34,61)=1;
g1(35,54)=(-1);
g1(35,10)=(-1);
g1(35,62)=1;
g1(36,53)=1;
g1(36,61)=1;
g1(36,63)=(-1);
g1(36,115)=(-1);
g1(37,11)=1;
g1(37,63)=(-1);
g1(37,64)=1;
g1(38,57)=(-1);
g1(38,62)=1;
g1(38,67)=1;
g1(39,24)=(-((1-params(41))*params(39)));
g1(39,37)=(-((1-params(41))*params(40)));
g1(39,76)=(-1);
g1(39,20)=(-params(41));
g1(39,78)=1;
g1(40,47)=(-((1-params(41))*params(39)));
g1(40,60)=(-((1-params(41))*params(40)));
g1(40,77)=(-1);
g1(40,21)=(-params(41));
g1(40,79)=1;
g1(41,18)=(-params(10));
g1(41,76)=1;
g1(41,110)=(-1);
g1(42,19)=(-params(10));
g1(42,77)=1;
g1(42,111)=(-1);
g1(43,5)=(-1)-params(11);
g1(43,42)=1;
g1(43,114)=(-1);
g1(43,22)=params(11);
g1(44,32)=params(3);
g1(44,36)=params(1);
g1(44,45)=(-1);
g1(44,74)=1/(1-params(36));
g1(45,55)=params(3);
g1(45,59)=params(1);
g1(45,67)=(-1);
g1(45,75)=1/(1-params(37));
g1(46,30)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(46,35)=1;
g1(46,44)=params(7)/params(1);
g1(47,53)=(-(params(19)*((params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1))/params(13)-1)));
g1(47,58)=1;
g1(47,66)=params(19)/params(13);
g1(48,28)=(-1);
g1(48,30)=params(7);
g1(48,35)=1;
g1(48,36)=1;
g1(48,68)=1;
g1(49,51)=(-1);
g1(49,53)=params(19);
g1(49,58)=1;
g1(49,59)=1;
g1(49,70)=1;
g1(50,32)=(-(params(36)*params(26)));
g1(50,45)=(-(params(36)*params(26)));
g1(50,69)=1;
g1(50,74)=(-(params(36)*params(26)));
g1(51,55)=(-(params(37)*params(27)));
g1(51,67)=(-(params(37)*params(27)));
g1(51,71)=1;
g1(51,75)=(-(params(37)*params(27)));
g1(52,62)=(-(params(36)*params(30)));
g1(52,68)=params(36)*params(30);
g1(52,69)=params(33);
g1(52,72)=(-(params(32)*params(28)));
g1(53,62)=(-(params(37)*params(31)));
g1(53,70)=params(37)*params(31);
g1(53,71)=params(35);
g1(53,73)=(-(params(34)*params(29)));
g1(54,3)=(-(params(36)*(1-params(30))));
g1(54,14)=(-(params(36)*(1-params(30))));
g1(54,16)=(-(params(32)*(1-params(28))));
g1(54,72)=params(2)*params(32);
g1(54,78)=(-(params(2)*params(32)));
g1(55,10)=(-(params(37)*(1-params(31))));
g1(55,15)=(-(params(37)*(1-params(31))));
g1(55,17)=(-(params(34)*(1-params(29))));
g1(55,73)=params(14)*params(34);
g1(55,79)=(-(params(14)*params(34)));
g1(56,14)=(-params(24));
g1(56,68)=1;
g1(56,112)=(-1);
g1(57,15)=(-params(25));
g1(57,70)=1;
g1(57,113)=(-1);
g1(58,23)=(-1);
g1(58,46)=1;
g1(58,80)=1;
g1(59,24)=(-1);
g1(59,47)=1;
g1(59,81)=1;
g1(60,25)=(-1);
g1(60,48)=1;
g1(60,82)=1;
g1(61,26)=(-1);
g1(61,49)=1;
g1(61,83)=1;
g1(62,27)=(-1);
g1(62,50)=1;
g1(62,84)=1;
g1(63,28)=(-1);
g1(63,51)=1;
g1(63,85)=1;
g1(64,29)=(-1);
g1(64,52)=1;
g1(64,86)=1;
g1(65,30)=(-1);
g1(65,53)=1;
g1(65,87)=1;
g1(66,31)=(-1);
g1(66,54)=1;
g1(66,88)=1;
g1(67,32)=(-1);
g1(67,55)=1;
g1(67,89)=1;
g1(68,33)=(-1);
g1(68,56)=1;
g1(68,90)=1;
g1(69,34)=(-1);
g1(69,57)=1;
g1(69,91)=1;
g1(70,35)=(-1);
g1(70,58)=1;
g1(70,92)=1;
g1(71,36)=(-1);
g1(71,59)=1;
g1(71,93)=1;
g1(72,37)=(-1);
g1(72,60)=1;
g1(72,94)=1;
g1(73,38)=(-1);
g1(73,61)=1;
g1(73,95)=1;
g1(74,39)=(-1);
g1(74,62)=1;
g1(74,96)=1;
g1(75,45)=(-1);
g1(75,67)=1;
g1(75,97)=1;
g1(76,5)=(-1);
g1(76,98)=1;

end
