function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(58, 89);
g1(1,19)=(-params(38));
g1(1,32)=(-params(39));
g1(1,71)=1;
g1(1,74)=(-1);
g1(2,42)=(-params(38));
g1(2,55)=(-params(39));
g1(2,72)=1;
g1(2,74)=(-1);
g1(3,16)=(-params(10));
g1(3,74)=1;
g1(3,86)=(-1);
g1(4,71)=(-params(37));
g1(4,72)=(-(1-params(37)));
g1(4,73)=1;
g1(5,18)=(-T(3));
g1(5,19)=1;
g1(5,77)=(-params(2));
g1(6,41)=(-T(6));
g1(6,42)=1;
g1(6,80)=(-params(14));
g1(7,18)=1;
g1(7,76)=(-1);
g1(7,77)=(-(params(27)*1/T(2)));
g1(7,21)=(-(params(27)*1/T(2)));
g1(7,71)=params(27)*1/T(2);
g1(8,41)=1;
g1(8,79)=(-1);
g1(8,80)=(-(params(28)*1/T(5)));
g1(8,44)=(-(params(28)*1/T(5)));
g1(8,72)=params(28)*1/T(5);
g1(9,77)=1;
g1(9,28)=1;
g1(9,71)=(-1);
g1(10,80)=1;
g1(10,51)=1;
g1(10,72)=(-1);
g1(11,20)=1;
g1(11,37)=(-T(7));
g1(11,38)=(-T(9));
g1(11,39)=(-T(8));
g1(11,64)=(-T(10));
g1(11,70)=(-T(15));
g1(12,37)=(-T(11));
g1(12,43)=1;
g1(12,60)=(-T(13));
g1(12,61)=(-T(12));
g1(12,64)=(-T(14));
g1(12,70)=(-T(16));
g1(13,21)=1;
g1(13,37)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+params(29)*T(7));
g1(13,78)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+params(29)*T(7))));
g1(13,38)=(-((1-params(9))*T(9)*params(29)*(-T(2))));
g1(13,39)=(-((1-params(12))*((1-params(7))*T(1)-params(29)*T(2)*T(8))));
g1(13,64)=(1-params(33))*T(2)*(params(29)*T(10)-params(31));
g1(13,70)=params(29)*T(2)*T(15);
g1(13,81)=(-(params(29)*T(2)*T(15)));
g1(14,37)=T(5)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+params(30)*T(11));
g1(14,78)=(-(T(5)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+params(30)*T(11))));
g1(14,44)=1;
g1(14,60)=(-((1-params(21))*T(13)*params(30)*(-T(5))));
g1(14,61)=(-((1-params(24))*((1-params(19))*T(4)-params(30)*T(5)*T(12))));
g1(14,64)=(1-params(33))*T(5)*(params(30)*T(14)-params(32));
g1(14,70)=params(30)*T(5)*T(16);
g1(14,81)=(-(params(30)*T(5)*T(16)));
g1(15,20)=(-(params(29)*T(2)));
g1(15,22)=1;
g1(15,37)=T(2);
g1(15,39)=(1-params(7))*T(1);
g1(15,64)=(-(T(2)*(-params(31))));
g1(16,37)=T(5);
g1(16,43)=(-(params(30)*T(5)));
g1(16,45)=1;
g1(16,61)=(1-params(19))*T(4);
g1(16,64)=(-(T(5)*(-params(32))));
g1(17,5)=(-1)-params(11);
g1(17,37)=1;
g1(17,88)=(-1);
g1(17,17)=params(11);
g1(18,27)=params(3);
g1(18,31)=params(1);
g1(18,40)=(-1);
g1(18,70)=params(36)/(1-params(36));
g1(19,50)=params(15);
g1(19,54)=params(13);
g1(19,62)=(-1);
g1(19,70)=params(36)/(1-params(36));
g1(20,23)=(-1);
g1(20,25)=params(7);
g1(20,30)=1/params(37);
g1(20,31)=1;
g1(20,64)=1;
g1(21,46)=(-1);
g1(21,48)=params(19);
g1(21,53)=1/(1-params(37));
g1(21,54)=1;
g1(21,64)=1;
g1(22,25)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(22,30)=1;
g1(22,39)=params(7)/params(1);
g1(23,48)=(-(params(19)*((params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1))/params(13)-1)));
g1(23,53)=1;
g1(23,61)=params(19)/params(13);
g1(24,27)=(-1);
g1(24,29)=(-1);
g1(24,68)=1;
g1(25,50)=(-1);
g1(25,52)=(-1);
g1(25,69)=1;
g1(26,63)=1;
g1(26,65)=1;
g1(26,68)=(-params(37));
g1(26,69)=(-(1-params(37)));
g1(26,70)=(-1);
g1(27,64)=(-params(35));
g1(27,65)=1;
g1(27,15)=(-params(34));
g1(28,64)=(-(1/params(2)*(1-params(35))));
g1(28,15)=(-(1/params(2)*(1-params(34))));
g1(28,66)=1;
g1(29,14)=(-params(33));
g1(29,64)=1;
g1(29,87)=(-1);
g1(30,64)=1;
g1(30,65)=(-1);
g1(30,67)=(-1);
g1(31,18)=(-(params(29)*T(2)));
g1(31,24)=1;
g1(32,41)=(-(params(30)*T(5)));
g1(32,47)=1;
g1(33,18)=1;
g1(33,20)=1;
g1(33,23)=(-1);
g1(34,41)=1;
g1(34,43)=1;
g1(34,46)=(-1);
g1(35,22)=1;
g1(35,24)=1;
g1(35,25)=(-1);
g1(36,45)=1;
g1(36,47)=1;
g1(36,48)=(-1);
g1(37,19)=(-1);
g1(37,1)=params(7);
g1(37,25)=(-params(7));
g1(37,26)=1;
g1(38,42)=(-1);
g1(38,8)=params(19);
g1(38,48)=(-params(19));
g1(38,49)=1;
g1(39,23)=1;
g1(39,27)=(-(1-params(4)));
g1(39,38)=(-1);
g1(40,46)=1;
g1(40,50)=(-(1-params(16)));
g1(40,60)=(-1);
g1(41,6)=(-params(9));
g1(41,38)=1;
g1(41,82)=(-1);
g1(42,12)=(-params(21));
g1(42,60)=1;
g1(42,84)=(-1);
g1(43,7)=(-params(12));
g1(43,39)=1;
g1(43,83)=(-1);
g1(44,13)=(-params(24));
g1(44,61)=1;
g1(44,85)=(-1);
g1(45,23)=(-1);
g1(45,32)=1;
g1(46,46)=(-1);
g1(46,55)=1;
g1(47,19)=(-1);
g1(47,2)=(-1);
g1(47,33)=1;
g1(48,42)=(-1);
g1(48,9)=(-1);
g1(48,56)=1;
g1(49,26)=(-1);
g1(49,3)=(-1);
g1(49,34)=1;
g1(50,49)=(-1);
g1(50,10)=(-1);
g1(50,57)=1;
g1(51,25)=1;
g1(51,33)=1;
g1(51,35)=(-1);
g1(51,89)=(-1);
g1(52,48)=1;
g1(52,56)=1;
g1(52,58)=(-1);
g1(52,89)=(-1);
g1(53,4)=1;
g1(53,35)=(-1);
g1(53,36)=1;
g1(54,11)=1;
g1(54,58)=(-1);
g1(54,59)=1;
g1(55,34)=(-params(37));
g1(55,57)=(-(1-params(37)));
g1(55,63)=1;
g1(56,29)=(-1);
g1(56,34)=1;
g1(56,40)=1;
g1(57,52)=(-1);
g1(57,57)=1;
g1(57,62)=1;
g1(58,5)=(-1);
g1(58,75)=1;

end
