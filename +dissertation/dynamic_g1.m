function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(58, 103);
g1(1,24)=(-T(6));
g1(1,25)=1;
g1(1,83)=(-(params(2)*params(29)));
g1(1,86)=(-(params(2)*(1-params(29))));
g1(2,24)=1;
g1(2,82)=(-params(30));
g1(2,83)=T(13)*(-params(29));
g1(2,27)=(-T(13));
g1(2,85)=(-(1-params(30)));
g1(2,86)=T(13)*(-(1-params(29)));
g1(2,75)=T(13);
g1(3,26)=1;
g1(3,43)=(-T(4));
g1(3,44)=(-T(3));
g1(3,46)=(-T(5));
g1(4,27)=1;
g1(4,43)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4));
g1(4,84)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4))));
g1(4,44)=(-((1-params(9))*T(3)*(-T(2))));
g1(4,46)=(-((1-params(12))*((1-params(7))*T(1)-T(2)*T(5))));
g1(5,26)=(-T(2));
g1(5,28)=1;
g1(5,43)=T(2);
g1(5,46)=(1-params(7))*T(1);
g1(6,24)=(-T(2));
g1(6,30)=1;
g1(7,24)=1;
g1(7,26)=1;
g1(7,29)=(-1);
g1(8,28)=1;
g1(8,30)=1;
g1(8,31)=(-1);
g1(9,25)=(-1);
g1(9,2)=params(7);
g1(9,31)=(-params(7));
g1(9,32)=1;
g1(10,29)=1;
g1(10,33)=(-(1-params(4)));
g1(10,44)=(-1);
g1(11,83)=1;
g1(11,34)=1;
g1(11,75)=(-1);
g1(12,9)=(-params(9));
g1(12,44)=1;
g1(12,88)=(-1);
g1(13,11)=(-params(12));
g1(13,46)=1;
g1(13,89)=(-1);
g1(14,33)=(-params(3));
g1(14,35)=1;
g1(14,37)=(-params(1));
g1(14,40)=(-1);
g1(14,48)=(-(1-params(33)));
g1(15,31)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(15,36)=1;
g1(15,46)=params(7)/params(1);
g1(16,29)=(-1);
g1(16,31)=params(7);
g1(16,36)=1;
g1(16,37)=1;
g1(16,47)=1;
g1(17,33)=(-1);
g1(17,35)=(-1);
g1(17,48)=(-1);
g1(17,49)=1;
g1(18,39)=(-1);
g1(18,47)=(-1);
g1(18,49)=1;
g1(19,12)=(-params(28));
g1(19,47)=1;
g1(19,90)=(-1);
g1(20,29)=(-1);
g1(20,38)=1;
g1(21,25)=(-1);
g1(21,5)=(-1);
g1(21,39)=1;
g1(22,32)=(-1);
g1(22,6)=(-1);
g1(22,40)=1;
g1(23,31)=1;
g1(23,39)=1;
g1(23,41)=(-1);
g1(23,94)=(-1);
g1(24,7)=1;
g1(24,41)=(-1);
g1(24,42)=1;
g1(25,83)=(-(1-params(31)));
g1(25,54)=(-T(12));
g1(25,55)=1;
g1(25,86)=(-(params(16)*params(31)));
g1(26,82)=(-(1-params(32)));
g1(26,83)=T(14)*(-(1-params(31)));
g1(26,54)=1;
g1(26,85)=(-params(32));
g1(26,86)=T(14)*(-params(31));
g1(26,57)=(-T(14));
g1(26,75)=T(14);
g1(27,43)=(-T(10));
g1(27,56)=1;
g1(27,73)=(-T(9));
g1(27,74)=(-T(11));
g1(28,43)=T(8)*(params(21)*(params(15)*params(22)+(1-params(21))*(params(15)*params(22)-1)-1)+T(10));
g1(28,84)=(-(T(8)*(params(21)*(params(15)*params(22)+(1-params(21))*(params(15)*params(22)-1)-1)+T(10))));
g1(28,57)=1;
g1(28,73)=(-((1-params(23))*T(9)*(-T(8))));
g1(28,74)=(-((1-params(25))*((1-params(21))*T(7)-T(8)*T(11))));
g1(29,43)=T(8);
g1(29,56)=(-T(8));
g1(29,58)=1;
g1(29,74)=(1-params(21))*T(1);
g1(30,54)=(-T(8));
g1(30,60)=1;
g1(31,54)=1;
g1(31,56)=1;
g1(31,59)=(-1);
g1(32,58)=1;
g1(32,60)=1;
g1(32,61)=(-1);
g1(33,55)=(-1);
g1(33,14)=params(21);
g1(33,61)=(-params(21));
g1(33,62)=1;
g1(34,59)=1;
g1(34,63)=(-(1-params(18)));
g1(34,73)=(-1);
g1(35,86)=1;
g1(35,64)=1;
g1(35,75)=(-1);
g1(36,20)=(-params(23));
g1(36,73)=1;
g1(36,91)=(-1);
g1(37,21)=(-params(25));
g1(37,74)=1;
g1(37,92)=(-1);
g1(38,63)=(-params(17));
g1(38,65)=1;
g1(38,67)=(-params(15));
g1(38,70)=(-1);
g1(39,61)=(-(params(21)*((params(15)*params(22)+(1-params(21))*(params(15)*params(22)-1))/params(15)-1)));
g1(39,66)=1;
g1(39,74)=params(21)/params(15);
g1(40,59)=(-1);
g1(40,61)=params(21);
g1(40,66)=1;
g1(40,67)=1;
g1(41,59)=(-1);
g1(41,68)=1;
g1(42,55)=(-1);
g1(42,17)=(-1);
g1(42,69)=1;
g1(43,62)=(-1);
g1(43,18)=(-1);
g1(43,70)=1;
g1(44,61)=1;
g1(44,69)=1;
g1(44,71)=(-1);
g1(44,94)=(-1);
g1(45,19)=1;
g1(45,71)=(-1);
g1(45,72)=1;
g1(46,25)=(-((1-params(27))*params(13)*params(26)));
g1(46,38)=(-((1-params(27))*params(26)*params(14)));
g1(46,45)=(-1);
g1(46,55)=(-((1-params(27))*params(13)*(1-params(26))));
g1(46,68)=(-((1-params(27))*(1-params(26))*params(14)));
g1(46,75)=1-params(27);
g1(47,10)=(-params(10));
g1(47,45)=1;
g1(47,87)=(-1);
g1(48,8)=(-1)-params(11);
g1(48,43)=1;
g1(48,93)=(-1);
g1(48,23)=params(11);
g1(49,1)=1;
g1(49,29)=(-1);
g1(49,50)=1;
g1(49,95)=(-1);
g1(50,4)=1;
g1(50,37)=(-1);
g1(50,51)=1;
g1(50,96)=(-1);
g1(51,3)=1;
g1(51,35)=(-1);
g1(51,52)=1;
g1(51,97)=(-1);
g1(52,32)=(-1);
g1(52,53)=1;
g1(52,98)=(-1);
g1(53,13)=1;
g1(53,59)=(-1);
g1(53,76)=1;
g1(53,99)=(-1);
g1(54,16)=1;
g1(54,67)=(-1);
g1(54,77)=1;
g1(54,100)=(-1);
g1(55,15)=1;
g1(55,65)=(-1);
g1(55,78)=1;
g1(55,101)=(-1);
g1(56,62)=(-1);
g1(56,79)=1;
g1(56,102)=(-1);
g1(57,22)=1;
g1(57,75)=(-1);
g1(57,80)=1;
g1(57,103)=(-1);
g1(58,8)=(-1);
g1(58,81)=1;

end
