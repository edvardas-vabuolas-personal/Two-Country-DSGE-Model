function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(56, 90);
g1(1,21)=(-T(6));
g1(1,22)=1;
g1(1,78)=(-(params(2)*params(42)));
g1(1,81)=(-(params(2)*(1-params(42))));
g1(2,21)=1;
g1(2,77)=(-params(43));
g1(2,78)=T(13)*(-params(42));
g1(2,24)=(-T(13));
g1(2,80)=(-(1-params(43)));
g1(2,81)=T(13)*(-(1-params(42)));
g1(2,75)=T(13);
g1(3,23)=1;
g1(3,40)=(-T(4));
g1(3,41)=(-T(3));
g1(3,42)=(-T(5));
g1(4,24)=1;
g1(4,40)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4));
g1(4,79)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4))));
g1(4,41)=(-((1-params(9))*T(3)*(-T(2))));
g1(4,42)=(-((1-params(12))*((1-params(7))*T(1)-T(2)*T(5))));
g1(5,23)=(-T(2));
g1(5,25)=1;
g1(5,40)=T(2);
g1(5,42)=(1-params(7))*T(1);
g1(6,21)=(-T(2));
g1(6,27)=1;
g1(7,21)=1;
g1(7,23)=1;
g1(7,26)=(-1);
g1(8,25)=1;
g1(8,27)=1;
g1(8,28)=(-1);
g1(9,22)=(-1);
g1(9,1)=params(7);
g1(9,28)=(-params(7));
g1(9,29)=1;
g1(10,26)=1;
g1(10,30)=(-(1-params(4)));
g1(10,41)=(-1);
g1(11,78)=1;
g1(11,31)=1;
g1(11,75)=(-1);
g1(12,6)=(-params(9));
g1(12,41)=1;
g1(12,82)=(-1);
g1(13,7)=(-params(12));
g1(13,42)=1;
g1(13,83)=(-1);
g1(14,26)=(-1);
g1(14,35)=1;
g1(15,22)=(-1);
g1(15,2)=(-1);
g1(15,36)=1;
g1(16,29)=(-1);
g1(16,3)=(-1);
g1(16,37)=1;
g1(17,28)=1;
g1(17,36)=1;
g1(17,38)=(-1);
g1(17,90)=(-1);
g1(18,4)=1;
g1(18,38)=(-1);
g1(18,39)=1;
g1(19,32)=(-1);
g1(19,37)=1;
g1(19,43)=1;
g1(20,78)=(-(1-params(44)));
g1(20,44)=(-T(12));
g1(20,45)=1;
g1(20,81)=(-(params(14)*params(44)));
g1(21,77)=(-(1-params(45)));
g1(21,78)=T(14)*(-(1-params(44)));
g1(21,44)=1;
g1(21,80)=(-params(45));
g1(21,81)=T(14)*(-params(44));
g1(21,47)=(-T(14));
g1(21,75)=T(14);
g1(22,40)=(-T(10));
g1(22,46)=1;
g1(22,63)=(-T(9));
g1(22,64)=(-T(11));
g1(23,40)=T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10));
g1(23,79)=(-(T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10))));
g1(23,47)=1;
g1(23,63)=(-((1-params(21))*T(9)*(-T(8))));
g1(23,64)=(-((1-params(23))*((1-params(19))*T(7)-T(8)*T(11))));
g1(24,40)=T(8);
g1(24,46)=(-T(8));
g1(24,48)=1;
g1(24,64)=(1-params(19))*T(1);
g1(25,44)=(-T(8));
g1(25,50)=1;
g1(26,44)=1;
g1(26,46)=1;
g1(26,49)=(-1);
g1(27,48)=1;
g1(27,50)=1;
g1(27,51)=(-1);
g1(28,45)=(-1);
g1(28,8)=params(19);
g1(28,51)=(-params(19));
g1(28,52)=1;
g1(29,49)=1;
g1(29,53)=(-(1-params(16)));
g1(29,63)=(-1);
g1(30,81)=1;
g1(30,54)=1;
g1(30,75)=(-1);
g1(31,12)=(-params(21));
g1(31,63)=1;
g1(31,84)=(-1);
g1(32,13)=(-params(23));
g1(32,64)=1;
g1(32,85)=(-1);
g1(33,49)=(-1);
g1(33,58)=1;
g1(34,45)=(-1);
g1(34,9)=(-1);
g1(34,59)=1;
g1(35,52)=(-1);
g1(35,10)=(-1);
g1(35,60)=1;
g1(36,51)=1;
g1(36,59)=1;
g1(36,61)=(-1);
g1(36,90)=(-1);
g1(37,11)=1;
g1(37,61)=(-1);
g1(37,62)=1;
g1(38,55)=(-1);
g1(38,60)=1;
g1(38,65)=1;
g1(39,22)=(-((1-params(41))*params(39)*params(38)));
g1(39,35)=(-((1-params(41))*params(38)*params(40)));
g1(39,45)=(-((1-params(41))*params(39)*(1-params(38))));
g1(39,58)=(-((1-params(41))*(1-params(38))*params(40)));
g1(39,74)=(-1);
g1(39,19)=(-params(41));
g1(39,75)=1;
g1(40,18)=(-params(10));
g1(40,74)=1;
g1(40,86)=(-1);
g1(41,5)=(-1)-params(11);
g1(41,40)=1;
g1(41,89)=(-1);
g1(41,20)=params(11);
g1(42,30)=params(3);
g1(42,34)=params(1);
g1(42,43)=(-1);
g1(42,72)=1/(1-params(36));
g1(43,53)=params(3);
g1(43,57)=params(1);
g1(43,65)=(-1);
g1(43,73)=1/(1-params(37));
g1(44,28)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(44,33)=1;
g1(44,42)=params(7)/params(1);
g1(45,51)=(-(params(19)*((params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1))/params(13)-1)));
g1(45,56)=1;
g1(45,64)=params(19)/params(13);
g1(46,26)=(-1);
g1(46,28)=params(7);
g1(46,33)=1;
g1(46,34)=1;
g1(46,66)=1;
g1(47,49)=(-1);
g1(47,51)=params(19);
g1(47,56)=1;
g1(47,57)=1;
g1(47,68)=1;
g1(48,30)=(-(params(36)*params(26)));
g1(48,43)=(-(params(36)*params(26)));
g1(48,67)=1;
g1(48,72)=(-(params(36)*params(26)));
g1(49,53)=(-(params(37)*params(27)));
g1(49,65)=(-(params(37)*params(27)));
g1(49,69)=1;
g1(49,73)=(-(params(37)*params(27)));
g1(50,60)=(-(params(36)*params(30)));
g1(50,66)=params(36)*params(30);
g1(50,67)=params(33);
g1(50,70)=(-(params(32)*params(28)));
g1(51,60)=(-(params(37)*params(31)));
g1(51,68)=params(37)*params(31);
g1(51,69)=params(35);
g1(51,71)=(-(params(34)*params(29)));
g1(52,3)=(-(params(36)*(1-params(30))));
g1(52,14)=(-(params(36)*(1-params(30))));
g1(52,16)=(-(params(32)*(1-params(28))));
g1(52,70)=params(2)*params(32);
g1(52,75)=(-(params(2)*params(32)));
g1(53,10)=(-(params(37)*(1-params(31))));
g1(53,15)=(-(params(37)*(1-params(31))));
g1(53,17)=(-(params(34)*(1-params(29))));
g1(53,71)=params(14)*params(34);
g1(53,75)=(-(params(14)*params(34)));
g1(54,14)=(-params(24));
g1(54,66)=1;
g1(54,87)=(-1);
g1(55,15)=(-params(25));
g1(55,68)=1;
g1(55,88)=(-1);
g1(56,5)=(-1);
g1(56,76)=1;

end
