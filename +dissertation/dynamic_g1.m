function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = dissertation.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(58, 95);
g1(1,22)=(-T(6));
g1(1,23)=1;
g1(1,80)=(-params(2));
g1(2,45)=(-T(12));
g1(2,46)=1;
g1(2,83)=(-params(14));
g1(3,22)=1;
g1(3,79)=(-1);
g1(3,80)=(-(1/T(2)));
g1(3,25)=(-(1/T(2)));
g1(3,77)=1/T(2);
g1(4,45)=1;
g1(4,82)=(-1);
g1(4,83)=(-(1/T(8)));
g1(4,48)=(-(1/T(8)));
g1(4,77)=1/T(8);
g1(5,80)=1;
g1(5,32)=1;
g1(5,77)=(-1);
g1(6,83)=1;
g1(6,55)=1;
g1(6,77)=(-1);
g1(7,24)=1;
g1(7,41)=(-T(4));
g1(7,42)=(-T(3));
g1(7,43)=(-T(5));
g1(7,67)=(-(params(37)*T(4)));
g1(7,74)=(-T(13));
g1(8,41)=(-T(10));
g1(8,47)=1;
g1(8,64)=(-T(9));
g1(8,65)=(-T(11));
g1(8,69)=(-(params(38)*T(10)));
g1(8,75)=(-T(14));
g1(9,25)=1;
g1(9,41)=T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4));
g1(9,81)=(-(T(2)*(params(7)*(params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1)-1)+T(4))));
g1(9,42)=(-((1-params(9))*T(3)*(-T(2))));
g1(9,43)=(-((1-params(12))*((1-params(7))*T(1)-T(2)*T(5))));
g1(9,67)=T(15);
g1(9,74)=T(2)*T(13);
g1(9,84)=(-(T(2)*T(13)));
g1(10,41)=T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10));
g1(10,81)=(-(T(8)*(params(19)*(params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1)-1)+T(10))));
g1(10,48)=1;
g1(10,64)=(-((1-params(21))*T(9)*(-T(8))));
g1(10,65)=(-((1-params(24))*((1-params(19))*T(7)-T(8)*T(11))));
g1(10,69)=T(16);
g1(10,75)=T(8)*T(14);
g1(10,85)=(-(T(8)*T(14)));
g1(11,24)=(-T(2));
g1(11,26)=1;
g1(11,41)=T(2);
g1(11,43)=(1-params(7))*T(1);
g1(11,67)=(-(params(37)*T(2)));
g1(12,41)=T(8);
g1(12,47)=(-T(8));
g1(12,49)=1;
g1(12,65)=(1-params(19))*T(1);
g1(12,69)=(-(params(38)*T(8)));
g1(13,23)=(-((1-params(42))*params(40)*params(39)));
g1(13,36)=(-((1-params(42))*params(39)*params(41)));
g1(13,46)=(-((1-params(42))*params(40)*(1-params(39))));
g1(13,59)=(-((1-params(42))*(1-params(39))*params(41)));
g1(13,76)=(-1);
g1(13,20)=(-params(42));
g1(13,77)=1;
g1(14,19)=(-params(10));
g1(14,76)=1;
g1(14,91)=(-1);
g1(15,5)=(-1)-params(11);
g1(15,41)=1;
g1(15,94)=(-1);
g1(15,21)=params(11);
g1(16,31)=params(3);
g1(16,35)=params(1);
g1(16,44)=(-1);
g1(16,74)=params(37)/(1-params(37));
g1(17,54)=params(15);
g1(17,58)=params(13);
g1(17,66)=(-1);
g1(17,75)=params(38)/(1-params(38));
g1(18,27)=(-1);
g1(18,29)=params(7);
g1(18,34)=1;
g1(18,35)=1;
g1(18,67)=1;
g1(19,50)=(-1);
g1(19,52)=params(19);
g1(19,57)=1;
g1(19,58)=1;
g1(19,69)=1;
g1(20,31)=(-1);
g1(20,44)=(-1);
g1(20,68)=1;
g1(20,74)=(-1);
g1(21,54)=(-1);
g1(21,66)=(-1);
g1(21,70)=1;
g1(21,75)=(-1);
g1(22,38)=params(29)-1;
g1(22,67)=(-(params(37)*params(31)));
g1(22,68)=1;
g1(22,16)=(-params(29));
g1(23,61)=params(30)-1;
g1(23,69)=(-(params(38)*params(32)));
g1(23,70)=1;
g1(23,17)=(-params(30));
g1(24,38)=1-params(29)-params(2);
g1(24,67)=(-(params(37)*(1-params(31))));
g1(24,16)=(-(1-params(29)));
g1(24,71)=params(2);
g1(24,86)=(-params(2));
g1(25,61)=1-params(30)-params(14);
g1(25,69)=(-(params(38)*(1-params(32))));
g1(25,17)=(-(1-params(30)));
g1(25,72)=params(14);
g1(25,86)=(-params(14));
g1(26,14)=(-params(25));
g1(26,67)=1;
g1(26,92)=(-1);
g1(27,15)=(-params(26));
g1(27,69)=1;
g1(27,93)=(-1);
g1(28,67)=1;
g1(28,68)=(-1);
g1(28,18)=(-1);
g1(29,69)=1;
g1(29,70)=(-1);
g1(29,73)=(-1);
g1(30,22)=(-T(2));
g1(30,28)=1;
g1(31,45)=(-T(8));
g1(31,51)=1;
g1(32,22)=1;
g1(32,24)=1;
g1(32,27)=(-1);
g1(33,45)=1;
g1(33,47)=1;
g1(33,50)=(-1);
g1(34,26)=1;
g1(34,28)=1;
g1(34,29)=(-1);
g1(35,49)=1;
g1(35,51)=1;
g1(35,52)=(-1);
g1(36,29)=(-(params(7)*((params(1)*params(8)+(1-params(7))*(params(1)*params(8)-1))/params(1)-1)));
g1(36,34)=1;
g1(36,43)=params(7)/params(1);
g1(37,52)=(-(params(19)*((params(13)*params(20)+(1-params(19))*(params(13)*params(20)-1))/params(13)-1)));
g1(37,57)=1;
g1(37,65)=params(19)/params(13);
g1(38,23)=(-1);
g1(38,1)=params(7);
g1(38,29)=(-params(7));
g1(38,30)=1;
g1(39,46)=(-1);
g1(39,8)=params(19);
g1(39,52)=(-params(19));
g1(39,53)=1;
g1(40,27)=1;
g1(40,31)=(-(1-params(4)));
g1(40,42)=(-1);
g1(41,50)=1;
g1(41,54)=(-(1-params(16)));
g1(41,64)=(-1);
g1(42,6)=(-params(9));
g1(42,42)=1;
g1(42,87)=(-1);
g1(43,12)=(-params(21));
g1(43,64)=1;
g1(43,89)=(-1);
g1(44,7)=(-params(12));
g1(44,43)=1;
g1(44,88)=(-1);
g1(45,13)=(-params(24));
g1(45,65)=1;
g1(45,90)=(-1);
g1(46,27)=(-1);
g1(46,36)=1;
g1(47,50)=(-1);
g1(47,59)=1;
g1(48,23)=(-1);
g1(48,2)=(-1);
g1(48,37)=1;
g1(49,46)=(-1);
g1(49,9)=(-1);
g1(49,60)=1;
g1(50,30)=(-1);
g1(50,3)=(-1);
g1(50,38)=1;
g1(51,53)=(-1);
g1(51,10)=(-1);
g1(51,61)=1;
g1(52,29)=1;
g1(52,37)=1;
g1(52,39)=(-1);
g1(52,95)=(-1);
g1(53,52)=1;
g1(53,60)=1;
g1(53,62)=(-1);
g1(53,95)=(-1);
g1(54,4)=1;
g1(54,39)=(-1);
g1(54,40)=1;
g1(55,11)=1;
g1(55,62)=(-1);
g1(55,63)=1;
g1(56,33)=(-1);
g1(56,38)=1;
g1(56,44)=1;
g1(57,56)=(-1);
g1(57,61)=1;
g1(57,66)=1;
g1(58,5)=(-1);
g1(58,78)=1;

end
